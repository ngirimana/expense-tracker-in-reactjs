[{"/home/schadrack/Documents/expense-tracker/src/index.js":"1","/home/schadrack/Documents/expense-tracker/src/context/context.js":"2","/home/schadrack/Documents/expense-tracker/src/App.js":"3","/home/schadrack/Documents/expense-tracker/src/context/contextReducer.js":"4","/home/schadrack/Documents/expense-tracker/src/styles.js":"5","/home/schadrack/Documents/expense-tracker/src/components/index.js":"6","/home/schadrack/Documents/expense-tracker/src/components/InfoCard.jsx":"7","/home/schadrack/Documents/expense-tracker/src/components/Snackbar/Snackbar.jsx":"8","/home/schadrack/Documents/expense-tracker/src/components/Main/Main.jsx":"9","/home/schadrack/Documents/expense-tracker/src/components/Main/styles.js":"10","/home/schadrack/Documents/expense-tracker/src/components/Snackbar/styles.js":"11","/home/schadrack/Documents/expense-tracker/src/components/Main/List/List.jsx":"12","/home/schadrack/Documents/expense-tracker/src/components/Main/Form/Form.jsx":"13","/home/schadrack/Documents/expense-tracker/src/components/Main/Form/styles.js":"14","/home/schadrack/Documents/expense-tracker/src/constants/categories.js":"15","/home/schadrack/Documents/expense-tracker/src/utils/formatDate.js":"16","/home/schadrack/Documents/expense-tracker/src/components/Main/List/styles.js":"17","/home/schadrack/Documents/expense-tracker/src/components/Details/Details.jsx":"18","/home/schadrack/Documents/expense-tracker/src/useTransactions.js":"19","/home/schadrack/Documents/expense-tracker/src/components/Details/styles.js":"20"},{"size":430,"mtime":1644516526948,"results":"21","hashOfConfig":"22"},{"size":2032,"mtime":1608476407000,"results":"23","hashOfConfig":"22"},{"size":1438,"mtime":1644517373377,"results":"24","hashOfConfig":"22"},{"size":583,"mtime":1608476407000,"results":"25","hashOfConfig":"22"},{"size":582,"mtime":1608476407000,"results":"26","hashOfConfig":"22"},{"size":216,"mtime":1608476407000,"results":"27","hashOfConfig":"22"},{"size":460,"mtime":1608476407000,"results":"28","hashOfConfig":"22"},{"size":797,"mtime":1608476407000,"results":"29","hashOfConfig":"22"},{"size":1191,"mtime":1644518069176,"results":"30","hashOfConfig":"22"},{"size":514,"mtime":1608476407000,"results":"31","hashOfConfig":"22"},{"size":206,"mtime":1608476407000,"results":"32","hashOfConfig":"22"},{"size":1403,"mtime":1608476407000,"results":"33","hashOfConfig":"22"},{"size":4946,"mtime":1608476407000,"results":"34","hashOfConfig":"22"},{"size":247,"mtime":1608476407000,"results":"35","hashOfConfig":"22"},{"size":1693,"mtime":1644521302181,"results":"36","hashOfConfig":"22"},{"size":328,"mtime":1644519899550,"results":"37","hashOfConfig":"22"},{"size":416,"mtime":1608476407000,"results":"38","hashOfConfig":"22"},{"size":725,"mtime":1608476407000,"results":"39","hashOfConfig":"22"},{"size":1124,"mtime":1608476407000,"results":"40","hashOfConfig":"22"},{"size":247,"mtime":1608476407000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mhqobi",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/schadrack/Documents/expense-tracker/src/index.js",[],"/home/schadrack/Documents/expense-tracker/src/context/context.js",[],"/home/schadrack/Documents/expense-tracker/src/App.js",[],"/home/schadrack/Documents/expense-tracker/src/context/contextReducer.js",[],"/home/schadrack/Documents/expense-tracker/src/styles.js",[],"/home/schadrack/Documents/expense-tracker/src/components/index.js",[],"/home/schadrack/Documents/expense-tracker/src/components/InfoCard.jsx",[],"/home/schadrack/Documents/expense-tracker/src/components/Snackbar/Snackbar.jsx",[],"/home/schadrack/Documents/expense-tracker/src/components/Main/Main.jsx",[],"/home/schadrack/Documents/expense-tracker/src/components/Main/styles.js",[],"/home/schadrack/Documents/expense-tracker/src/components/Snackbar/styles.js",[],"/home/schadrack/Documents/expense-tracker/src/components/Main/List/List.jsx",[],"/home/schadrack/Documents/expense-tracker/src/components/Main/Form/Form.jsx",["83"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","/home/schadrack/Documents/expense-tracker/src/components/Main/Form/styles.js",[],"/home/schadrack/Documents/expense-tracker/src/constants/categories.js",[],"/home/schadrack/Documents/expense-tracker/src/utils/formatDate.js",[],"/home/schadrack/Documents/expense-tracker/src/components/Main/List/styles.js",[],"/home/schadrack/Documents/expense-tracker/src/components/Details/Details.jsx",[],"/home/schadrack/Documents/expense-tracker/src/useTransactions.js",[],"/home/schadrack/Documents/expense-tracker/src/components/Details/styles.js",[],{"ruleId":"84","severity":1,"message":"85","line":78,"column":6,"nodeType":"86","endLine":78,"endColumn":15,"suggestions":"87"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["88"],{"desc":"89","fix":"90"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"91","text":"92"},[3006,3015],"[createTransaction, formData, segment]"]